{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./client/app/app.component.ts","./client/app/app.component.html","./client/app/app.module.ts","./client/app/services/DataService.ts","./client/environments/environment.ts","./client/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEkB;;;;;;;;;;;;;;;;;;;;ICChE,4EACE;IAAA,uDACF;IAAA,4DAAM;;;IADJ,yDACF;IADE,4FACF;;;;IAQM,+EAAqD;IAAA,uDAAwC;IAAA,4DAAS;;;IAAnE,+EAAiB;IAAC,yDAAwC;IAAxC,sHAAwC;;;;;IAG7F,uEAAsD;IAAA,mEAAQ;IAAA,4DAAO;;;IADvE,6EACE;IAAA,qHAAsD;IACxD,4DAAO;;;IADC,yDAA+C;IAA/C,kHAA+C;;;IAOrD,uEAAwD;IAAA,mEAAQ;IAAA,4DAAO;;;IADzE,6EACE;IAAA,qHAAwD;IAC1D,4DAAO;;;IADC,yDAAiD;IAAjD,oHAAiD;;;IAOvD,uEAA4D;IAAA,mEAAQ;IAAA,4DAAO;;;IAC3E,uEAAuD;IAAA,kEAAO;IAAA,4DAAO;;;IACrE,uEAAuD;IAAA,mEAAQ;IAAA,4DAAO;;;IAHxE,6EACE;IAAA,qHAA4D;IAC5D,qHAAuD;IACvD,qHAAuD;IACzD,4DAAO;;;IAHC,yDAAqD;IAArD,wHAAqD;IACrD,yDAAgD;IAAhD,mHAAgD;IAChD,yDAAgD;IAAhD,mHAAgD;;;IAOtD,uEAAoD;IAAA,mEAAQ;IAAA,4DAAO;;;IACnE,uEAA+C;IAAA,kEAAO;IAAA,4DAAO;;;IAC7D,uEAA+C;IAAA,mEAAQ;IAAA,4DAAO;;;IAHhE,6EACE;IAAA,qHAAoD;IACpD,qHAA+C;IAC/C,qHAA+C;IACjD,4DAAO;;;IAHC,yDAA6C;IAA7C,gHAA6C;IAC7C,yDAAwC;IAAxC,2GAAwC;IACxC,yDAAwC;IAAxC,2GAAwC;;;IAO9C,uEAA+D;IAAA,mEAAQ;IAAA,4DAAO;;;IAC9E,uEAAgE;IAAA,wEAAa;IAAA,4DAAO;;;IACpF,uEAAgE;IAAA,yEAAc;IAAA,4DAAO;;;IAHvF,6EACE;IAAA,qHAA+D;IAC/D,qHAAgE;IAChE,qHAAgE;IAClE,4DAAO;;;IAHC,yDAAwD;IAAxD,2HAAwD;IACxD,yDAAyD;IAAzD,4HAAyD;IACzD,yDAAyD;IAAzD,4HAAyD;;ADvClE,MAAM,YAAY;IAkBvB,YAAoB,SAAsB,EAAU,YAAyB;QAAzD,cAAS,GAAT,SAAS,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAhB7E,aAAQ,GAAW,kBAAkB,CAAC;QACtC,eAAU,GAAW,CAAC,CAAC;QACvB,YAAO,GAAW,EAAE,CAAC;QACrB,UAAK,GAAG;YACN;gBACE,EAAE,EAAE,CAAC;gBACL,UAAU,EAAE,OAAO;gBACnB,MAAM,EAAE,WAAW;aACpB;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,UAAU,EAAE,MAAM;gBAClB,MAAM,EAAE,WAAW;aACpB;SACF,CAAC;IAGF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YAClC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,QAAQ,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC;YACtB,YAAY,EAAE,CAAC,CAAC,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5D,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9E,eAAe,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SAClG,CAAC,CAAC;IACL,CAAC;IAKD,IAAI;QACF,IAAI,QAAQ,GAAuB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACtD,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC1C,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;IAC5B,CAAC;;sGAvCU,YAAY,wFAAZ,YAAY;QCXzB,2EACE;QAAA,2EACE;QAAA,qEAAI;QAAA,wEAAa;QAAA,4DAAK;QACtB,0GACE;QAGF,sEAAK;QAAA,uDAAmB;QAAA,4DAAM;QAE9B,4EACE;QADe,8IAAY,UAAM,IAAC;QAClC,2EACE;QAAA,wEAAO;QAAA,kEAAM;QAAA,4DAAQ;QACrB,+EACE;QAAA,kHAAqD;QACvD,4DAAS;QACT,8GACE;QAEJ,4DAAM;QACN,4EACE;QAAA,yEAAO;QAAA,iEAAK;QAAA,4DAAQ;QACpB,yEACA;QAAA,8GACE;QAEJ,4DAAM;QACN,4EACE;QAAA,yEAAO;QAAA,8FAAkC;QAAA,4DAAQ;QACjD,yEACA;QAAA,8GACE;QAIJ,4DAAM;QACN,4EACE;QAAA,yEAAO;QAAA,0EAAc;QAAA,4DAAQ;QAC7B,0EACA;QAAA,8GACE;QAIJ,4DAAM;QACN,4EACE;QAAA,yEAAO;QAAA,2EAAe;QAAA,4DAAQ;QAC9B,6EAA4G;QAC5G,8GACE;QAIJ,4DAAM;QACN,4EACE;QAAA,2EAAsC;QAAA,kEAAM;QAAA,4DAAI;QAChD,gFAA8C;QAAA,yEAAa;QAAA,4DAAS;QACtE,4DAAM;QACR,4DAAO;QAET,4DAAM;QACR,4DAAM;;QAzDiC,yDAAe;QAAf,6EAAe;QAI7C,yDAAmB;QAAnB,2FAAmB;QAEa,yDAAqB;QAArB,kFAAqB;QAI5C,0DAA0B;QAA1B,8EAA0B;QAEV,0DAAuC;QAAvC,qGAAuC;QAOvC,0DAAyC;QAAzC,uGAAyC;QAOzC,0DAA6C;QAA7C,2GAA6C;QAS7C,0DAAqC;QAArC,mGAAqC;QASrC,0DAAgD;QAAhD,8GAAgD;;8EDpCrE,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEM;AACM;AACA;;AAgB9C,MAAM,SAAS;;+FAAT,SAAS,cAFR,2DAAY;qJAEb,SAAS,mBALT;QACT,iEAAW;KACZ,YAPQ;YACP,uEAAa;YACb,kEAAmB;SAEpB;+EAMU,SAAS,mBAZlB,2DAAY,aAGZ,uEAAa;QACb,kEAAmB;8EAQV,SAAS;cAdrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,kEAAmB;iBAEpB;gBACD,SAAS,EAAE;oBACT,iEAAW;iBACZ;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,WAAW;IAHxB;QAKE,aAAQ,GAAW,GAAG,CAAC;KAMxB;IAJC,aAAa,CAAC,QAAQ;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;;wGANU,WAAW,8DAAX,WAAW,oBAFV,MAAM;8EAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from './services/DataService';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ITimeBillViewModel } from '../viewModels/ITimeBillViewModel';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'theApp',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n}) \r\nexport class AppComponent implements OnInit {\r\n  theForm: FormGroup;\r\n  employee: string = \"Shawn Wildermuth\";\r\n  employeeId: number = 1;\r\n  message: string = \"\";\r\n  cases = [\r\n    {\r\n      id: 1,\r\n      fileNumber: \"12345\",\r\n      client: \"Jones, M.\"\r\n    },\r\n    {\r\n      id: 2,\r\n      fileNumber: \"1235\",\r\n      client: \"Smith, J.\"\r\n    },\r\n  ];\r\n\r\n  constructor(private _formBldr: FormBuilder, private _dataService: DataService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.theForm = this._formBldr.group({\r\n      caseId: [\"\", Validators.required],\r\n      workDate: [new Date()],\r\n      timeSegments: [0, [Validators.required, Validators.max(72)]],\r\n      rate: [120.00, [Validators.required, Validators.min(85), Validators.max(800)]],\r\n      workDescription: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(4000)]]\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n  save() {\r\n    let timeBill: ITimeBillViewModel = this.theForm.value;\r\n    timeBill.employeeId = this.employeeId;\r\n    this._dataService.saveTimesheet(timeBill);\r\n    this.message = \"Saved...\";\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-6 offset-3\">\r\n    <h3>Add Timesheet</h3>\r\n    <div class=\"alert alert-secondary\" *ngIf=\"message\">\r\n      {{ message}}\r\n    </div>\r\n\r\n    <div>For: {{ employee }}</div>\r\n\r\n    <form novalidate (ngSubmit)=\"save()\" [formGroup]=\"theForm\">\r\n      <div class=\"form-group\">\r\n        <label>Case: </label>\r\n        <select class=\"form-control\" name=\"caseId\" formControlName=\"caseId\">\r\n          <option *ngFor=\"let case of cases\" [value]=\"case.id\">{{ case.client }}: {{ case.fileNumber }}</option>\r\n        </select>\r\n        <span class=\"text-danger\" *ngIf=\"theForm.controls.caseId.invalid\">\r\n          <span *ngIf=\"theForm.controls.caseId.errors.required\">Required</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Date:</label>\r\n        <input class=\"form-control\" name=\"workDate\" formControlName=\"workDate\" />\r\n        <span class=\"text-danger\" *ngIf=\"theForm.controls.workDate.invalid\">\r\n          <span *ngIf=\"theForm.controls.workDate.errors.required\">Required</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Time Segments (6 minute segments):</label>\r\n        <input class=\"form-control\" name=\"timeSegments\" formControlName=\"timeSegments\" />\r\n        <span class=\"text-danger\" *ngIf=\"theForm.controls.timeSegments.invalid\">\r\n          <span *ngIf=\"theForm.controls.timeSegments.errors.required\">Required</span>\r\n          <span *ngIf=\"theForm.controls.timeSegments.errors.min\">too low</span>\r\n          <span *ngIf=\"theForm.controls.timeSegments.errors.max\">too high</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Rate (in USD):</label>\r\n        <input class=\"form-control\" name=\"rate\" formControlName=\"rate\" />\r\n        <span class=\"text-danger\" *ngIf=\"theForm.controls.rate.invalid\">\r\n          <span *ngIf=\"theForm.controls.rate.errors.required\">Required</span>\r\n          <span *ngIf=\"theForm.controls.rate.errors.min\">too low</span>\r\n          <span *ngIf=\"theForm.controls.rate.errors.max\">too high</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label>Work Performed:</label>\r\n        <textarea class=\"form-control\" rows=\"3\" formControlName=\"workDescription\" name=\"workDescription\"></textarea>\r\n        <span class=\"text-danger\" *ngIf=\"theForm.controls.workDescription.invalid\">\r\n          <span *ngIf=\"theForm.controls.workDescription.errors.required\">Required</span>\r\n          <span *ngIf=\"theForm.controls.workDescription.errors.minlength\">too few chars</span>\r\n          <span *ngIf=\"theForm.controls.workDescription.errors.maxlength\">too many chars</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <a href=\"/\" class=\"btn btn-secondary\">Cancel</a>\r\n        <button type=\"submit\" class=\"btn btn-success\">Add Time Bill</button>\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AppComponent } from './app.component';\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { DataService } from './services/DataService';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n//    HttpClientModule\r\n  ],\r\n  providers: [\r\n    DataService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  _baseUrl: string = \"/\"; \r\n\r\n  saveTimesheet(timeBill) {\r\n    return true;\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}